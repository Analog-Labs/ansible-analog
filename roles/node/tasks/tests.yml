---

- block:

  - name: Test | Check node_binary
    ansible.builtin.fail:
      msg: "The 'node_binary' variable can't be empty!"
    when: node_binary == ''

  - name: Test | Check node_app_name
    ansible.builtin.fail:
      msg: "The 'node_app_name' variable can't be empty!"
    when: node_app_name == ''

  - name: Test | Check node_chain
    ansible.builtin.fail:
      msg: "The 'node_chain' variable can't be empty!"
    when: node_chain == '' and node_chainspec == ''

  - name: Test | Check node_parachain_chain
    ansible.builtin.fail:
      msg: "The 'node_parachain_chain' variable can't be empty!"
    when: node_parachain_role != '' and node_parachain_chain == '' and node_parachain_chainspec == ''

  - name: Test | Check node_role
    ansible.builtin.fail:
      msg: "The 'node_role' variable can contain only 'validator', 'boot', 'full' or 'rpc' values!"
    when: node_role == '' or node_role not in ["validator", "boot", "rpc", "full"]

  - name: Test | Check node_parachain_role
    ansible.builtin.fail:
      msg: "The 'node_parachain_role' variable can contain only 'collator', 'validator' 'rpc' or 'full' values!"
    when: node_parachain_role != '' and node_parachain_role not in ["collator", "rpc", "full", "validator"]

  - name: Test | Check correctness of role variables
    ansible.builtin.fail:
      msg: "You use the wrong combination of 'node_role' and 'node_parachain_role' variables!"
    when: node_role == 'validator' and node_parachain_role == 'collator'

  - name: Test | Check node_app_name
    ansible.builtin.fail:
      msg: "The 'node_app_name' variable can contain only '0-9a-zA-Z_-' symbols!"
    when: node_app_name is regex('[^0-9a-zA-Z_-]+')

  - name: Test | Check node_user_home_path 1
    ansible.builtin.stat:
      path: "{{ node_user_home_path }}"
    register: _node_user_home_path_stat

  - name: Test | Check node_user_home_path 2
    ansible.builtin.fail:
      msg: "The user home dir {{ node_user_home_path }} must be created!"
    when: _node_user_home_path_stat.stat.isdir is not defined or not _node_user_home_path_stat.stat.isdir

  - name: Test | Check node_chain_backup_restoring_type
    ansible.builtin.fail:
      msg: "The 'node_chain_backup_restoring_type' variable can contain only 'tar' or 'none' values!"
    when: node_chain_backup_restoring_type not in ["tar", "none"]

  - name: Test | Check node_parachain_chain_backup_restoring_type
    ansible.builtin.fail:
      msg: "The 'node_parachain_chain_backup_restoring_type' variable can contain only, 'tar' or 'none' values!"
    when: node_parachain_chain_backup_restoring_type not in ["tar", "none"]

    # Should just function as a warning in check mode
  - name: Test | Check if node_chain_backup_force_restoring is enabled without a custom path
    ansible.builtin.fail:
      msg: |
        node_chain_backup_force_restoring is enabled without node_chain_backup_tmp_restore_path being set. 
        This could cause long downtime if the backup size is huge
    when:
      - node_chain_backup_force_restoring
      - node_chain_backup_tmp_restore_path == ''
      - ansible_check_mode
    ignore_errors: true

  - name: Test | Check chain_id
    ansible.builtin.fail:
      msg: "Restore from backup is not supported for chain: {{ node_chain }}"
    when: node_chain_backup_restoring_type != 'none' and node_chainspec == '' and _node_chain_folders[node_chain] is undefined

  - name: Test | Check parachain_chain_id
    ansible.builtin.fail:
      msg: "Restore from backup is not supported for chain: {{ node_parachain_chain }}"
    when: node_parachain_role != '' and node_parachain_chain_backup_restoring_type != 'none' and node_parachain_chainspec == '' and _node_parachain_chain_folders[node_parachain_chain] is undefined

  - name: Test | Check node_chain_backup_url
    ansible.builtin.fail:
      msg: "If you use tar backups, you have to set the node_chain_backup_url variable"
    when: node_chain_backup_restoring_type == 'tar' and node_chain_backup_url == ''

  - name: Test | Check node_parachain_chain_backup_url
    ansible.builtin.fail:
      msg: "If you use tar backups, you have to set the node_parachain_chain_backup_url variable"
    when: node_parachain_chain_backup_restoring_type == 'tar' and node_parachain_chain_backup_url == ''

  - name: Test | Check number of executions in play
    ansible.builtin.fail:
      msg: "If you execute {{ ansible_role_name }} role multiple time in one play, please set node_handler_id "
    when: ansible_play_role_names | regex_findall(ansible_role_name) | length > 1 and node_handler_id == ''

  tags: ['node', 'node-tests']
